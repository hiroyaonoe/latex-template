name: latex

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.filename.outputs.FILENAME }}
    steps:
      - uses: actions/checkout@v2

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Pull image"
        run: |
          docker pull ghcr.io/hiroyaonoe/texlive:latest

      - name: "Run latexmk"
        id: latexmk
        run: docker run --mount type=bind,src=${{ github.workspace }},dst=/work ghcr.io/hiroyaonoe/texlive:latest latexmk

      - name: "Output log if failure"
        if: failure() && steps.latexmk.outcome == 'failure'
        run: cat main.log

      - name: "Set filename"
        id: filename
        run: |
          FILENAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}_main_$(git rev-parse --short ${{ github.sha }}) # This is directory path
          echo ::set-output name=FILENAME::${FILENAME}

      - name: "Rename main.pdf"
        run: mv main.pdf ${{ steps.filename.outputs.FILENAME }}.pdf

      - name: "Upload artifact main.pdf"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.filename.outputs.FILENAME }}
          path: ${{ steps.filename.outputs.FILENAME }}.pdf
  
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: "Set filename"
        id: filename
        run: |
          FILENAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}_main_${GITHUB_REF/refs\/tags\//}.pdf
          echo ::set-output name=FILENAME::${FILENAME}

      - name: "Download artifact main.pdf"
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.filename }}

      - name: "Rename main.pdf"
        run: |
          pwd
          ls -al
          mv ${{ needs.build.outputs.filename }}.pdf ${{ steps.filename.outputs.FILENAME }}
          ls -al

      
      - name: "Release"
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.filename.outputs.FILENAME }}
